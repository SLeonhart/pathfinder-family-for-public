// Code generated by MockGen. DO NOT EDIT.
// Source: iVkApi.go

// Package apiMock is a generated GoMock package.
package apiMock

import (
	context "context"
	model "pathfinder-family/model"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockIVkApi is a mock of IVkApi interface.
type MockIVkApi struct {
	ctrl     *gomock.Controller
	recorder *MockIVkApiMockRecorder
}

// MockIVkApiMockRecorder is the mock recorder for MockIVkApi.
type MockIVkApiMockRecorder struct {
	mock *MockIVkApi
}

// NewMockIVkApi creates a new mock instance.
func NewMockIVkApi(ctrl *gomock.Controller) *MockIVkApi {
	mock := &MockIVkApi{ctrl: ctrl}
	mock.recorder = &MockIVkApiMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIVkApi) EXPECT() *MockIVkApiMockRecorder {
	return m.recorder
}

// GetPhoto mocks base method.
func (m *MockIVkApi) GetPhoto(ctx context.Context, url string) ([]byte, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPhoto", ctx, url)
	ret0, _ := ret[0].([]byte)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetPhoto indicates an expected call of GetPhoto.
func (mr *MockIVkApiMockRecorder) GetPhoto(ctx, url interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPhoto", reflect.TypeOf((*MockIVkApi)(nil).GetPhoto), ctx, url)
}

// GetPhotoServer mocks base method.
func (m *MockIVkApi) GetPhotoServer(ctx context.Context, request model.SendVkRequest) (*model.VkApiGetPhotoServerResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPhotoServer", ctx, request)
	ret0, _ := ret[0].(*model.VkApiGetPhotoServerResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetPhotoServer indicates an expected call of GetPhotoServer.
func (mr *MockIVkApiMockRecorder) GetPhotoServer(ctx, request interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPhotoServer", reflect.TypeOf((*MockIVkApi)(nil).GetPhotoServer), ctx, request)
}

// LoadPhotoIntoServer mocks base method.
func (m *MockIVkApi) LoadPhotoIntoServer(ctx context.Context, url, photoName string, photo []byte) (*model.VkApiLoadPhotoIntoServerResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "LoadPhotoIntoServer", ctx, url, photoName, photo)
	ret0, _ := ret[0].(*model.VkApiLoadPhotoIntoServerResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// LoadPhotoIntoServer indicates an expected call of LoadPhotoIntoServer.
func (mr *MockIVkApiMockRecorder) LoadPhotoIntoServer(ctx, url, photoName, photo interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "LoadPhotoIntoServer", reflect.TypeOf((*MockIVkApi)(nil).LoadPhotoIntoServer), ctx, url, photoName, photo)
}

// SavePhoto mocks base method.
func (m *MockIVkApi) SavePhoto(ctx context.Context, loadPhotoRes model.VkApiLoadPhotoIntoServerResponse, isTest *bool) (*model.VkApiSavePhotoResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SavePhoto", ctx, loadPhotoRes, isTest)
	ret0, _ := ret[0].(*model.VkApiSavePhotoResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SavePhoto indicates an expected call of SavePhoto.
func (mr *MockIVkApiMockRecorder) SavePhoto(ctx, loadPhotoRes, isTest interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SavePhoto", reflect.TypeOf((*MockIVkApi)(nil).SavePhoto), ctx, loadPhotoRes, isTest)
}

// Send mocks base method.
func (m *MockIVkApi) Send(ctx context.Context, request model.SendVkRequest, attachments []string) (*model.VkApiResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Send", ctx, request, attachments)
	ret0, _ := ret[0].(*model.VkApiResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Send indicates an expected call of Send.
func (mr *MockIVkApiMockRecorder) Send(ctx, request, attachments interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Send", reflect.TypeOf((*MockIVkApi)(nil).Send), ctx, request, attachments)
}
